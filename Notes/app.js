/**
 * Great thing #1: Templating
 * 
 * Idea is that we can simplify DOM creation by using patterns.
 * There are 3rd party libraries we can use to take advantage of patterns.
 * 
 * Great thing #2: Gulp
 */

window.addEventListener('load', function () {
    // Version one: works well for simle DOM elements
    // let pet = document.createElement('li');
    // pet.textContent = 'Angry Parrot';

    //let parent = document.querySelector('#pets');
    // parent.appendChild(pet);

    // Version two: works well-ish for more complex stuff
    // let pet = document.createElement('li');
    // pet.innerHTML = '<h2>Its a crutch!</h2><p>Whats up?</p>';
    let creatures = ['parrots', 'falcon', 'squirrel', 'dog'];
    // console.log(Mustache.render('hey {{person}} you seem cool', {
    //     person: 'Hodor',
    // }));

    let parent = document.querySelector('#pets');

    for (let i = 0; i < creatures.length; i++) {

        let pet = document.createElement('li');
        // Use the template but populate values for animalName and adjective
        // Take the string generated by the templates and make it the innerHTML of our new <li>
        pet.innerHTML = Mustache.render(
            document.querySelector('#pet-template').innerHTML,
            { animalName: creatures[i], adjective: 'fuzzy' }
        );
        //pet.innerHTML = document.querySelector('#pet-template').innerHTML; // big idea: bring the string FROM YOUR HTML
        parent.appendChild(pet);
    }
});